services:
  mysql:
    image: mysql:8.0
    container_name: mysql8_container
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: localdb
      MYSQL_USER: localuser
      MYSQL_PASSWORD: localpassword
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  setup:
    build: .
    container_name: setup-service
    environment:
      PROJECTNAME: "${PROJECTNAME:-newproject}"
    command:
      - bash
      - "./setup.sh"
      - "--project"
      - "$PROJECTNAME"
    healthcheck:
      test: ["CMD", "test", "-f", "/app/$PROJECTNAME/setup_complete"]
      interval: 10s
      timeout: 5s
      retries: 5


  load-sheets:
    build: .
    container_name: load-sheets-service
    depends_on:
      setup:
        condition: service_started
    environment:
      PROJECTNAME: "${PROJECTNAME:-newproject}"
    command:
      - bash
      - "./load-sheets.sh"
      - "--project"
      - "$PROJECTNAME"
      - "--types"
      - "$TYPES"
      - "--permissions"
      - "$PERMISSIONS"

  start:
    build: .
    container_name: start-service
    depends_on:
      setup:
        condition: service_started
      load-sheets:
        condition: service_started
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "3000:3000"
    environment:
      PROJECTNAME: "newproject"
      TYPES: "objects.csv"
      PERMISSIONS: "permissions.csv"
    command:
      - bash
      - "./start.sh"
      - "--project"
      - "$PROJECTNAME"
      - "--types"
      - "$TYPES"
      - "--permissions"
      - "$PERMISSIONS"

  fakedata:
    build: .
    container_name: fakedata-service
    depends_on:
      start:
        condition: service_started
    environment:
      PROJECTNAME: "${PROJECTNAME:-newproject}"
    command:
      - bash
      - "./fakedata.sh"
      - "--project"
      - "$PROJECTNAME"

  test-frontend:
    build: .
    container_name: testing-frontend
    depends_on:
      fakedata:
        condition: service_started
    environment:
      PROJECTNAME: "${PROJECTNAME:-newproject}"
    command:
      - bash
      - "./test-frontend.sh"
      - "--project"
      - "$PROJECTNAME"

volumes:
  mysql-data:
